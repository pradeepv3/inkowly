@mixin transition($property: all, $duration: .2s, $ease: linear) {
	-webkit-transition: $property $duration $ease;
	-moz-transition: $property $duration $ease;
	-o-transition: $property $duration $ease;
	transition: $property $duration $ease;
}

@mixin border-radius($radius) {
	border-radius: $radius;
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
}

@mixin Opacity($value) {
	$IEValue: $value*100;
	opacity: $value;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
	filter: alpha(opacity=$IEValue);
}

@mixin linear-gradient($from, $to) {
	background: $to;
	background: -moz-linear-gradient(top, $from 0%, $to 100%);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $from), color-stop(100%, $to));
	background: -webkit-linear-gradient(top, $from 0%, $to 100%);
	background: -o-linear-gradient(top, $from 0%, $to 100%);
	background: linear-gradient(to bottom, $from 0%, $to 100%);
	filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr=#{$from}, endColorstr=#{$to})
}

@mixin filter($filter-type, $filter-amount) {
	-webkit-filter: unquote($filter-type+unquote('(#{$filter-amount})'));
	-moz-filter: unquote($filter-type+unquote('(#{$filter-amount})'));
	-ms-filter: unquote($filter-type+unquote('(#{$filter-amount})'));
	-o-filter: unquote($filter-type+unquote('(#{$filter-amount})'));
	filter: unquote($filter-type+unquote('(#{$filter-amount})'));
}

@mixin keyframes($name) {
	@-webkit-keyframes #{$name} {
		@content;
	}
	@-moz-keyframes #{$name} {
		@content;
	}
	@-ms-keyframes #{$name} {
		@content;
	}
	@keyframes #{$name} {
		@content;
	}
}